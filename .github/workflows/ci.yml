name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run lint and format check
        run: npm run lint-and-format-check

  build-nestjs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build nestjs app
        run: npm run build
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Upload coverage report
        uses: ArtiomTr/jest-coverage-report-action@v2

  build-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        env:
          LOGGER_LEVEL: ${{ secrets.LOGGER_LEVEL }}
          PORT: ${{ secrets.PORT }}
        run: docker compose up -d --build habit-loop-production

      - name: Wait for the service to be up
        run: |
          echo "Waiting for the service to be up..."
          retries=0
          max_retries=10
          until curl -s http://localhost:3000/health || [ $retries -eq $max_retries ]; do
            echo "Waiting for the service to be up, retry #$retries..."
            retries=$((retries + 1))
            sleep 5
          done
          if [ $retries -eq $max_retries ]; then
            echo "Service did not start in time"
            exit 1
          fi

      - name: Test health endpoint
        run: curl -s http://localhost:3000/health
